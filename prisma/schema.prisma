// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String     @id @default(uuid())
  name               String
  email              String     @unique
  password           String
  photo              String?
  role               UserRole
  needPasswordChange Boolean    @default(true)
  status             UserStatus @default(ACTIVE)
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt

  aduptionRequest AdoptionRequest[]

  @@map("users")
}

model Pet {
  id                   String   @id @default(uuid())
  name                 String
  species              String
  breed                String
  age                  Int
  size                 PetSize
  gender               Gender
  location             String
  specialNeeds         String
  image                String
  helthStatus          String
  description          String
  temperament          String
  medicalHistory       String
  adoptionRequirements String
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  adoptionRequest AdoptionRequest[]

  @@map("pets")
}

model AdoptionRequest {
  id                     String        @id @default(uuid())
  user                   User          @relation(fields: [userId], references: [id])
  userId                 String
  pet                    Pet           @relation(fields: [petId], references: [id])
  petId                  String
  status                 RequestStatus @default(PENDING)
  petOwnershipExperience String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("adoptionRequests")
}

enum UserRole {
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  BLOCKED
  DELETED
}

enum Gender {
  MALE
  FEMALE
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}

enum PetSize {
  SMALL
  MEDIUM
  LARGE
}
